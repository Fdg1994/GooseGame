// <auto-generated />
using System;
using GooseGame.Data.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GooseGame.Data.Migrations
{
    [DbContext(typeof(GooseGameDbContext))]
    [Migration("20221122171620_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GooseGame.Data.NewEntities.PlayedGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayedGames");
                });

            modelBuilder.Entity("GooseGame.Data.NewEntities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("GooseGame.Data.NewEntities.PlayerSpecialSquaresHit", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialSquaresHitId")
                        .HasColumnType("int");

                    b.HasKey("PlayerId", "SpecialSquaresHitId");

                    b.HasIndex("SpecialSquaresHitId");

                    b.ToTable("PlayerSpecialSquareHits");
                });

            modelBuilder.Entity("GooseGame.Data.NewEntities.SpecialSquaresHit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SquareNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("WhenHit")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SpecialSquareHits");
                });

            modelBuilder.Entity("GooseGame.Data.NewEntities.PlayedGame", b =>
                {
                    b.HasOne("GooseGame.Data.NewEntities.Player", "Player")
                        .WithMany("PlayedGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GooseGame.Data.NewEntities.PlayerSpecialSquaresHit", b =>
                {
                    b.HasOne("GooseGame.Data.NewEntities.Player", "Player")
                        .WithMany("PlayerSpecialSquaresHits")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GooseGame.Data.NewEntities.SpecialSquaresHit", "SpecialSquaresHit")
                        .WithMany("PlayerSpecialSquaresHits")
                        .HasForeignKey("SpecialSquaresHitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("SpecialSquaresHit");
                });

            modelBuilder.Entity("GooseGame.Data.NewEntities.Player", b =>
                {
                    b.Navigation("PlayedGames");

                    b.Navigation("PlayerSpecialSquaresHits");
                });

            modelBuilder.Entity("GooseGame.Data.NewEntities.SpecialSquaresHit", b =>
                {
                    b.Navigation("PlayerSpecialSquaresHits");
                });
#pragma warning restore 612, 618
        }
    }
}
